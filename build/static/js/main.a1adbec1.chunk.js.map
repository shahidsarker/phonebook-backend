{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","nameInput","onNameChange","numberInput","onNumberChange","onAdd","type","onClick","Person","person","onDelete","name","number","Persons","props","persons","map","key","baseUrl","axios","get","then","response","data","newObj","post","id","delete","put","Notification","message","className","text","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setMessage","useEffect","console","log","personsService","initialPersons","catch","err","displayPersons","toLowerCase","includes","e","target","preventDefault","find","window","confirm","p","updatedPerson","returnedPerson","concat","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1adbec1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ value, onChange }) => (\n  <div>\n    filter shown with <input value={value} onChange={onChange} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  nameInput,\n  onNameChange,\n  numberInput,\n  onNumberChange,\n  onAdd,\n}) => (\n  <form>\n    <div>\n      name: <input value={nameInput} onChange={onNameChange} />\n    </div>\n    <div>\n      number: <input value={numberInput} onChange={onNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={onAdd}>\n        add\n      </button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, onDelete }) => (\n  <p>\n    {person.name} {person.number} <button onClick={onDelete}>delete</button>\n  </p>\n);\n\nconst Persons = (props) => {\n  // return ({props.persons.map((person) =>   <Person key={person.name} person={person}/>\n  // )})\n\n  return props.persons.map((person) => (\n    <Person\n      key={person.name}\n      person={person}\n      onDelete={() => props.onDelete(person)}\n    />\n  ));\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\n// axios.get(\"http://localhost:3001/persons\").then((response) => {\n//       setPersons(response.data);\n//     });\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObj) => {\n  const request = axios.post(baseUrl, newObj);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nconst update = (id, newObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObj);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, remove, update };\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) return null;\n  return <div className={message.type}>{message.text}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\n\nimport personsService from \"./services/persons\";\n\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const hook = () => {\n    console.log(\"effect\");\n    personsService\n      .getAll()\n      .then((initialPersons) => {\n        setPersons(initialPersons);\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(hook, []);\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n\n    // Check if name is already in phonebook\n    if (persons.find((person) => person.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} is already in phonebook, replace with new number?`\n        )\n      ) {\n        const person = persons.find((p) => p.name === newName);\n        const updatedPerson = { ...person, number: newNumber };\n        return personsService\n          .update(person.id, updatedPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== returnedPerson.id ? person : returnedPerson\n              )\n            );\n          });\n      }\n    }\n\n    const personObj = { name: newName, number: newNumber };\n    personsService\n      .create(personObj)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage({ text: `Added ${returnedPerson.name}`, type: \"success\" });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) {\n      personsService\n        .remove(person.id)\n        .then((response) => {\n          setPersons(persons.filter((p) => p.id !== person.id));\n          setMessage({\n            text: `${person.name} has been removed`,\n            type: \"success\",\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((err) => {\n          console.log(err);\n          setMessage({\n            text: `${person.name} has already been removed from the server`,\n            type: \"error\",\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => setNewNumber(e.target.value);\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const displayPersons =\n    filter === \"\"\n      ? persons\n      : persons.filter((person) => person.name.toLowerCase().includes(filter));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter value={filter} onChange={handleFilterChange} />\n\n      <h3>Add a new person</h3>\n      <PersonForm\n        nameInput={newName}\n        onNameChange={handleNameChange}\n        numberInput={newNumber}\n        onNumberChange={handleNumberChange}\n        onAdd={handleAdd}\n      />\n\n      <h3>Numbers</h3>\n\n      {/* {displayPersons.map((person) => (\n        <p key={person.name}>\n          {person.name} {person.number}\n        </p>\n      ))} */}\n      <Persons persons={displayPersons} onDelete={handleDelete} />\n\n      <code>\n        <hr />\n        debug:\n        <div>newName:{newName}</div>\n        <div>newNumber: {newNumber}</div>\n        <div>filter: {filter}</div>\n      </code>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}